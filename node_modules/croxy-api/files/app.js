const request = require('node-superfetch');
const EventEmitter = require("events");
const deasync = require("deasync");

class CroxyApi extends EventEmitter {
	constructor(key) {
		super();
		if (!key) throw new Error('Lütfen bir key giriniz. (Key almak için: https://api.croxy.codes/ sitesinden ya da Discord sunucumuza gelerek alabilirsiniz: https://discord.gg/6qYpjuz)');
		this.key = key;
		new Promise(async function(resolve, reject){
			const { body } = await request.get('https://croxy-api-web.croxythedev.repl.co/keychecker/'+key);
			if(body.key === false) throw new Error('Girdiğiniz key geçersizdir.');
		})
	};

	döviz() {
		return deasync(async (cb) => {
			try {
				var başlat = Date.now();
				const { body } = await request.get('https://croxy-api-web.croxythedev.repl.co/doviz/'+this.key);
				let veriler = {};
				Object.keys(body).forEach(v => {
					veriler[v] = {
						"birim": body[v].birim,
						"isim": body[v].isim,
						"alış": body[v].alış,
						"satış": body[v].satış,
						"değişim": body[v].değişim
					}
				});
				this.emit("veriAlındı", {
					veriler: veriler,
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, veriler);
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	deprem(sayi) {
		if(!sayi || !Number(sayi) || sayi < 1) throw new TypeError('Lütfen kaç tane depremin görüntüleceğini yazın.')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				const { body } = await request.get('https://croxy-api-web.croxythedev.repl.co/deprem/'+sayi+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body,
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body)
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	mcsunucu(yazi) {
		if(!yazi) throw new TypeError('Lütfen bir sunucu adresi gir. Örneğin; mc.craftrise.tc')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now();
				const { body } = await request.get("https://croxy-api-web.croxythedev.repl.co/minecraft/sunucu/"+yazi.toLowerCase()+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body,
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body)
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	mcoyuncu(yazi) {
		if(!yazi) throw new TypeError('Lütfen bir oyuncu ismi gir. Örneğin; BurakGider')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now();
				const { body } = await request.get("https://croxy-api-web.croxythedev.repl.co/minecraft/oyuncu/"+yazi.toLowerCase()+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body,
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body)
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	film(yazi) {
		if(!yazi) throw new TypeError('Lütfen bir film ismi gir. Örneğin; Ayla')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				const { body } = await request.get("https://croxy-api-web.croxythedev.repl.co/film/"+yazi+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body,
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body);
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	dizi(yazi) {
		if(!yazi) throw new TypeError('Lütfen bir dizi ismi gir. Örneğin; Stranger Things')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				const { body } = await request.get("https://croxy-api-web.croxythedev.repl.co/dizi/"+yazi+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body,
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body);
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	şarkı(yazi) {
		if(!yazi) throw new TypeError('Lütfen bir şarkı ismi gir. Örneğin; Ezhel Felaket')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				const { body } = await request.get("https://croxy-api-web.croxythedev.repl.co/sarki/"+yazi.toLowerCase()+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body,
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body)
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	şifre(sayi) {
		if(!sayi) throw new TypeError('Lütfen şifrenizin uzunluğunu belirleyin')
		if(isNaN(sayi)) throw new TypeError('Lütfen bir sayı gir.')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				const { body } = await request.get("https://croxy-api-web.croxythedev.repl.co/sifreolustur/"+sayi+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body.hata ? body.hata : body.sonuç,
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body.hata ? body.hata : body.sonuç);
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}
	
	vikipedi(aranacak) {
		if(!aranacak) throw new TypeError('Lütfen aranacak şeyi girin.')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				const { body } = await request.get("https://croxy-api-web.croxythedev.repl.co/vikipedi/"+aranacak+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body.hata ? body.hata : Object.keys(body).map(x => body[x]),
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body.hata ? body.hata : Object.keys(body).map(x => body[x]))
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	birimçevir(birim, sayi) {
		const birimler = ["USD", "AUD", "DKK", "EUR", "GBP", "CHF", "SEK", "CAD", "KWD", "NOK", "SAR", "JPY", "BGN", "RON", "RUB", "IRR", "CNY", "PKR", "QAR"]
		if(!birim) throw new TypeError('Lütfen bir birim giriniz.')
		if(!birimler.includes(birim)) throw new TypeError('Lütfen geçerli bir birim giriniz. Bütün birimleri öğrenmek için https://croapi.cf/docs/birimler')
		if(!sayi) throw new TypeError('Lütfen bir sayı girin.')
		if(isNaN(sayi)) throw new TypeError('Lütfen bir sayı girin.')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				const { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/birimcevir/${birim}/${sayi}`+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body,
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body)
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	çeviri(dil, yazi) {
		if(!dil) throw new TypeError('Lütfen çevirilecek dili girin.')
		if(!yazi) throw new TypeError('Lütfen çevireceğiniz yazıyı girin.')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				const { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/ceviri/${dil}/${yazi}`+'/'+this.key);
				if(body.sonuç === yazi) throw new TypeError("Lütfen geçerli bir dil girin. Örneğin; tr, es, en vb.")
				this.emit("veriAlındı", {
					veriler: body.hata ? body.hata : body.sonuç,
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body.hata ? body.hata : body.sonuç);
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	tarih(date, format) {
		if(!date) throw new TypeError('Lütfen bir tarih girin. Örneğin; 81204827 ya da January 1, 2019')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now();
				if(!format) {
					var { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/tarih/normal/${date}`+'/'+this.key);
					this.emit("veriAlındı", {
						veriler: body.hata ? body.hata : body.sonuç,
						süreler: {
							tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
							alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
						}
					})
					cb(null, body.hata ? body.hata : body.sonuç)
				} else {
					var { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/tarih/normal/${date}/${format}`+'/'+this.key);
					this.emit("veriAlındı", {
						veriler: body.hata ? body.hata : body.sonuç,
						süreler: {
							tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
							alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
						}
					})
					 cb(null, body.hata ? body.hata : body.sonuç)
				}
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	sondakika(val) {
		if(!val) throw new TypeError("Kaç tane son dakika haberinin görüntüleneceğini yazın.")
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				var { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/sondakika/${val}`+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body.hata ? body.hata : Object.keys(body.sonuç).map(x => body.sonuç[x]),
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body.hata ? body.hata : Object.keys(body.sonuç).map(x => body.sonuç[x]))
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	haber(val, kategori) {
		const kategoriler = ["ekonomi", "magazin", "spor", "gündem", "türkiye", "dünya"]
		if(!val) throw new TypeError("Kaç tane haberin görüntüleneceğini yazın.")
		if(!kategoriler.includes(kategori)) throw new TypeError("Şu kategorileri girebilirsin: "+kategoriler.join(", "))
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				var { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/haber/${val}/${kategori}`+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body.hata ? body.hata : Object.keys(body.sonuç).map(x => body.sonuç[x]),
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body.hata ? body.hata : Object.keys(body.sonuç).map(x => body.sonuç[x]));
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	rastgele(val) {
		if(!val) throw new TypeError("Bir veri girin.")
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				var { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/rastgeleveri/${val}`+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body.hata ? body.hata : body.sonuç,
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body.hata ? body.hata : body.sonuç);
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	kalansüre(val, format) {
		if(!val) throw new TypeError('Lütfen bir tarih girin. Örneğin; 101204827 ya da January 1, 2022')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now();
				var { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/kalansure/${val}`+'/'+this.key);
				if(!format) {
					this.emit("veriAlındı", {
						veriler: body.hata ? body.hata : body.sonuç,
						süreler: {
							tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
							alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
						}
					})
					cb(null, body.hata ? body.hata : body.sonuç);
				} else {
					var sonuç = body.sonuç.replace(/[A-z]+/g,'').replace("ü", "").replace("ı", "").split("  ")
					this.emit("veriAlındı", {
						veriler: body.hata ? body.hata : body.sonuç,
						süreler: {
							tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
							alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
						}
					})
					cb(null, body.hata ? body.hata : format.replace(/\[+y]+/g, sonuç[0] || 0).replace(/\[+a]+/g, sonuç[1] || 0).replace(/\[+h]+/g, sonuç[2] || 0).replace(/\[+g]+/g, sonuç[3] || 0).replace(/\[+s]+/g, sonuç[4] || 0).replace(/\[+S]+/g, sonuç[5] || 0).replace(/\s+/g,' '))
				}
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	geçensüre(val, format) {
		if(!val) throw new TypeError('Lütfen bir tarih girin. Örneğin; 81204827 ya da January 1, 2020')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now();
				var { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/gecensure/${val}`+'/'+this.key);
				if(!format) {
					this.emit("veriAlındı", {
						veriler: body.hata ? body.hata : body.sonuç,
						süreler: {
							tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
							alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
						}
					})
					cb(null, body.hata ? body.hata : body.sonuç);
				} else {
					var sonuç = body.sonuç.replace(/[A-z]+/g,'').replace("ü", "").replace("ı", "").split("  ")
					this.emit("veriAlındı", {
						veriler: body.hata ? body.hata : body.sonuç,
						süreler: {
							tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
							alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
						}
					})
					cb(null, body.hata ? body.hata : format.replace(/\[+y]+/g, sonuç[0] || 0).replace(/\[+a]+/g, sonuç[1] || 0).replace(/\[+h]+/g, sonuç[2] || 0).replace(/\[+g]+/g, sonuç[3] || 0).replace(/\[+s]+/g, sonuç[4] || 0).replace(/\[+S]+/g, sonuç[5] || 0).replace(/\s+/g,' '));
				}
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

	namaz(şehir) {
		if(!şehir) throw new TypeError('Lütfen bir şehir girin.')
		var başlat = Date.now();
		return deasync(async (cb) => {
			try {
				var { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/namazvakti/${şehir}`+'/'+this.key);
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
			this.emit("veriAlındı", {
				veriler: body.hata ? body.hata : body,
				süreler: {
					tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
				}
			})
			cb(null, body.hata ? body.hata : body);
		})()
	}

	youtubeVideolar(kanal) {
		if(!kanal) throw new TypeError('Lütfen bir kanal ID\'si girin.')
		var başlat = Date.now();
		return deasync(async (cb) => {
			try {
				var { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/youtube/videolar/${kanal}`+'/'+this.key);
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
			this.emit("veriAlındı", {
				veriler: body.hata ? body.hata : body,
				süreler: {
					tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
				}
			})
			cb(null, body.hata ? body.hata : body);
		})()
	}

	kaçkm(şehir1, şehir2) {
		if(!şehir1) throw new TypeError('Lütfen bir şehir girin.')
		if(!şehir2) throw new TypeError('Lütfen bir şehir girin.')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				var { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/kackm/${şehir1}/${şehir2}`+'/'+this.key);
				this.emit("veriAlındı", {
					veriler: body.hata ? body.hata : body,
					süreler: {
						tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
						alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
					}
				})
				cb(null, body.hata ? body.hata : body);
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})()
	}

	sayısalTarih(date, format) {
		if(!date) throw new TypeError('Lütfen bir tarih girin. Örneğin; 81204827 ya da January 1, 2019')
		return deasync(async (cb) => {
			try {
				var başlat = Date.now()
				if(!format) {
					var { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/tarih/sayisal/${date}`+'/'+this.key);
					this.emit("veriAlındı", {
						veriler: body.hata ? body.hata : body.sonuç,
						süreler: {
							tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
							alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
						}
					})
					cb(null, body.hata ? body.hata : body.sonuç);
				} else {
					var { body } = await request.get(`https://croxy-api-web.croxythedev.repl.co/tarih/sayisal/${date}/${format}`+'/'+this.key);
					this.emit("veriAlındı", {
						veriler: body.hata ? body.hata : body.sonuç,
						süreler: {
							tarih: `${new Date().toLocaleDateString().split("-").reverse().join("/")} ${new Date().toTimeString().split(" ")[0]}`,
							alınmaSüresi: Math.floor((Date.now() - başlat) / 1024)
						}
					})
					cb(null, body.hata ? body.hata : body.sonuç);
				}
			} catch (err) {
				if(err.message === "503 Service Unavailable") throw new TypeError("Verilerin geldiği sitede bir hata ortaya çıktı. Lütfen tekrar deneyin. Eğer hala çalışmazsa lütfen modülün Discord destek sunucusuna gelin. https://discord.gg/6qYpjuz")
				throw new TypeError(err);
			}
		})();
	}

};

var version = require("../package.json").version
var functions = {
	şarkı: function(x) { return CroxyApi.şarkı(x) },
	döviz: function(x) { return CroxyApi.döviz(x) },
	deprem: function(x) { return CroxyApi.deprem(x) },
	mcsunucu: function(x) { return CroxyApi.mcsunucu(x) },
	mcoyuncu: function(x) { return CroxyApi.mcoyuncu(x) },
	film: function(x) { return CroxyApi.film(x) },
	dizi: function(x) { return CroxyApi.dizi(x) },
	şifre: function(x) { return CroxyApi.şifre(x) },
	birimçevir: function(x, y) { return CroxyApi.birimçevir(x, y) },
	kaçkm: function(x, y) { return CroxyApi.kaçkm(x, y) },
	namaz: function(x) { return CroxyApi.namaz(x) },
	çeviri: function(x, y) { return CroxyApi.çeviri(x, y) },
	tarih: function(x, y) { return CroxyApi.tarih(x, y) },
	sayısalTarih: function(x, y) { return CroxyApi.sayısalTarih(x, y) },
	haber: function(x, y) { return CroxyApi.haber(x, y) },
	sondakika: function(x) { return CroxyApi.sondakika(x) },
	rastgele: function(x) { return CroxyApi.rastgele(x) },
	geçensüre: function(x) { return CroxyApi.geçensüre(x) },
	kalansüre: function(x) { return CroxyApi.kalansüre(x) },
	vikipedi: function(x) { return CroxyApi.vikipedi(x) },
}

module.exports = CroxyApi;
module.exports.version = version;
module.exports.functions = functions;